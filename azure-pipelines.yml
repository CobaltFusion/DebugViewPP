# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-2022'

variables:
  solution: 'DebugView++.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

steps:
- checkout: self
  submodules: true
  
- task: NuGetToolInstaller@0

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    platform: 'x64'
    solution: '$(solution)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '-m /p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'

- task: VSTest@2
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: '**\*test.exe'
    searchFolder: '$(System.DefaultWorkingDirectory)'

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: '$(buildPlatform)/$(BuildConfiguration)/(D*.exe|*.zip|*.pdb|*.msi|*.vsix)'
    targetFolder: $(Build.ArtifactStagingDirectory)

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: DebugView++

#- task: GithubRelease@0 
#  displayName: 'Create GitHub Release'
#  inputs:
#    githubConnection: janwilmans
#    repositoryName: CobaltFusion/DebugViewPP
#    assets: $(Build.ArtifactStagingDirectory)/(Debug*.exe|Debug.zip|Debug.msi|*.vsix)